dist: trusty
sudo: false
language: generic

cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

matrix:
  include:
  - env: BUILD=cabal GHCVER=7.8.4 CABALVER=1.18
    compiler: ": #GHC 7.8.4"
    addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4,happy-1.19.5], sources: [hvr-ghc]}}

  - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22
    compiler: ": #GHC 7.10.3"
    addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,happy-1.19.5], sources: [hvr-ghc]}}

  - env: BUILD=cabal GHCVER=8.0.2 CABALVER=1.24
    compiler: ": #GHC 8.0.2"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.2,happy-1.19.5], sources: [hvr-ghc]}}

  - env: BUILD=cabal GHCVER=8.2.1 CABALVER=1.24
    compiler: ": #GHC 8.2.1"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.2.1,happy-1.19.5], sources: [hvr-ghc]}}

  - env: BUILD=stack ARGS="--resolver lts-9"
    compiler: ": #stack 8.0.2"
    addons: {apt: {packages: [ghc-8.0.2], sources: [hvr-ghc]}}

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  fast_finish: true

  allow_failures:
    - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi
- export PATH=$PATH:/opt/happy/1.19.5/bin/:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:$HOME/.cabal/bin
# Download and unpack the stack executable
- |
  if [[ $BUILD == "stack" ]]; then
    mkdir -p ~/.local/bin
    if [ `uname` = "Darwin" ]
    then
      curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
    else
      curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    fi
  fi

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  case "$BUILD" in
    stack)
      ulimit -n 4096
      stack --no-terminal $ARGS init --force
      stack --no-terminal --install-ghc $ARGS test --only-dependencies --fast --test
      ;;
    cabal)
      cabal --version
      travis_retry cabal update
      cabal install -j --only-dependencies -ffast --enable-tests --enable-benchmarks -fembed_data_files --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS
      ;;
  esac

script:
- |
  case "$BUILD" in
    stack)
      ulimit -n 4096
      stack --no-terminal $ARGS init --force
      stack --no-terminal $ARGS test --haddock --no-haddock-deps --ghc-options="-O0 -Wall -fno-warn-unused-do-bind -Werror"
      ;;
    cabal)
      cabal sdist --output-directory=sourcedist && \
      cd sourcedist && \
      cabal configure --enable-tests --enable-benchmarks -v2 -ffast --ghc-options="-O0 -Wall -fno-warn-unused-do-bind -Werror" && \
      cabal build && \
      cabal test
      ;;
  esac
